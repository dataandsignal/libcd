CC			= gcc
CFLAGS			= -c -Wall -Wextra -Wfatal-errors -Wno-unused-function
SRCDIR 			= .
DEBUGOUTPUTDIR 		= build/debug
RELEASEOUTPUTDIR	= build/release
TEST_LIST_SOURCES			= cd_test_list.c
TEST_HASH_SOURCES			= cd_test_hash.c
INCLUDES		= -I. -I../include
_TEST_LIST_OBJECTS		= $(TEST_LIST_SOURCES:.c=.o)
_TEST_HASH_OBJECTS		= $(TEST_HASH_SOURCES:.c=.o)
TEST_LIST_DEBUGOBJECTS 		= $(patsubst %,$(DEBUGOUTPUTDIR)/%,$(_TEST_LIST_OBJECTS))
TEST_LIST_RELEASEOBJECTS 		= $(patsubst %,$(RELEASEOUTPUTDIR)/%,$(_TEST_LIST_OBJECTS))
TEST_HASH_DEBUGOBJECTS 		= $(patsubst %,$(DEBUGOUTPUTDIR)/%,$(_TEST_HASH_OBJECTS))
TEST_HASH_RELEASEOBJECTS 		= $(patsubst %,$(RELEASEOUTPUTDIR)/%,$(_TEST_HASH_OBJECTS))
TEST_LIST_DEBUGTARGET		= build/debug/cdtestlist
TEST_LIST_RELEASETARGET		= build/release/cdtestlist
TEST_HASH_DEBUGTARGET		= build/debug/cdtesthash
TEST_HASH_RELEASETARGET		= build/release/cdtesthash

debugall:	$(SOURCES) $(TEST_LIST_DEBUGTARGET) $(TEST_HASH_DEBUGTARGET)
releaseall:	$(SOURCES) $(TEST_LIST_RELEASETARGET) $(TEST_HASH_RELEASETARGET)

# additional flags
# CONFIG_DEBUG_LIST	- extensive debugging of list with external debugging
# 			functions
test-debug:		CFLAGS += -DDEBUG -g -ggdb3 -O0
test-debug:		debugall
		./$(TEST_LIST_DEBUGTARGET)
		./$(TEST_HASH_DEBUGTARGET)

test-release:	CFLAGS += -DNDEBUG
test-release: 	releaseall
		./$(TEST_LIST_RELEASETARGET)
		./$(TEST_HASH_RELEASETARGET)

test:		test-release
		./$(TEST_LIST_RELEASETARGET)
		./$(TEST_HASH_RELEASETARGET)

$(TEST_LIST_DEBUGTARGET): $(TEST_LIST_DEBUGOBJECTS) 
	$(CC) $(LDFLAGS) $(TEST_LIST_DEBUGOBJECTS) -o $@

$(TEST_LIST_RELEASETARGET): $(TEST_LIST_RELEASEOBJECTS) 
	$(CC) $(LDFLAGS) $(TEST_LIST_RELEASEOBJECTS) -o $@

$(TEST_HASH_DEBUGTARGET): $(TEST_HASH_DEBUGOBJECTS) 
	$(CC) $(LDFLAGS) $(TEST_HASH_DEBUGOBJECTS) -o $@

$(TEST_HASH_RELEASETARGET): $(TEST_HASH_RELEASEOBJECTS) 
	$(CC) $(LDFLAGS) $(TEST_HASH_RELEASEOBJECTS) -o $@

$(DEBUGOUTPUTDIR)/%.o: $(SRCDIR)/%.c
	$(CC) $(CFLAGS) $(INCLUDES) $< -o $@

$(RELEASEOUTPUTDIR)/%.o: $(SRCDIR)/%.c
	$(CC) $(CFLAGS) $(INCLUDES) $< -o $@

.c.o:
	$(CC) $(CFLAGS) $(INCLUDES) $< -o $@

all: test-release

.DEFAULT_GOAL = test-release

clean:
	rm -rf $(TEST_LIST_DEBUGOBJECTS) $(TEST_LIST_DEBUGTARGET)
	rm -rf $(TEST_HASH_DEBUGOBJECTS) $(TEST_HASH_DEBUGTARGET)
	rm -rf $(TEST_LIST_RELEASEOBJECTS) $(TEST_LIST_RELEASETARGET)
	rm -rf $(TEST_HASH_RELEASEOBJECTS) $(TEST_HASH_RELEASETARGET)
